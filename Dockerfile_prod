FROM python:3.12-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Set working directory
WORKDIR /app

# Install system dependencies required to build mysqlclient
RUN apt-get update \
    && apt-get install -y gcc g++ python3-dev default-libmysqlclient-dev build-essential pkg-config curl git && \
    rm -rf /var/lib/apt/lists/* && \ 
    apt-get clean

# Install Nuitka
RUN pip install --no-cache-dir nuitka

# Copy requirements and install
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy project files
COPY . .


# Compile project with Nuitka
RUN python -m nuitka --module task_tracker --include-package=task_tracker --include-package-data=task_tracker --module-name-choice=original && \
    python -m nuitka --module accounts --include-package=accounts --include-package-data=accounts --module-name-choice=original  && \
    python -m nuitka --module projects --include-package=projects --include-package-data=projects --module-name-choice=original  && \
    python -m nuitka --module tasks --include-package=tasks --include-package-data=tasks --module-name-choice=original  && \
    python -m nuitka --module sso --include-package=sso --include-package-data=sso --module-name-choice=original

# Remove all file and folder excepts manage.py, "*.so", .env, setup.sh
RUN mkdir -p /tmp/project && \
    mv *.so /tmp/project/ && \
    mv .env /tmp/project/ && \
    mv manage.py /tmp/project/ && \
    mv setup.sh /tmp/project/ && \
    rm -rf * && \
    rm .dockerignore .env.sample && \
    mv /tmp/project/* . && \
    mv /tmp/project/.env . && \
    rm -r /tmp/project



# Expose port
EXPOSE 8000

RUN chmod +x /app/setup.sh
ENTRYPOINT ["/app/setup.sh"]

# docker build -t my-django-app .
# docker compose --env-file .env  up --build
# docker compose --env-file .env exec web bash